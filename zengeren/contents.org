#+TITLE: 全ゲ連で話す事
#+AUTHOR: さくらんぼ
#+EMAIL:lambda.sakura@gmail.com
#+DATE:2011/02/12

* 自己紹介

- 名前
  - さくらんぼ
  - lambda\_sakura
  - 卑猥乙

- 所属:さくらんぼ亭
  - 一応代表
  - ドット、絵、プログラム担当(最近はドット、絵はやってない)
  

* 本日のテーマ

ゲーム開発とLisp

  - なんでLispでゲーム開発したの？
  - Lispでゲーム開発なんてできるの？
  - Lispでゲーム開発するとどうなるの？

既にゲーム開発をしている人向けの講座
 - LL、組み込み言語、DSLとか興味ある人に是非聞いて欲しい

* 2010年のさくらんぼ亭の課題

 - 時間ない！
 
   開発者の多くが社会人になったため開発時間が短くなった。C/C++の開発ではバッドノウハウとかが多すぎてつらい。

 - メンバと作業時間帯が合わない！

   メンバが作業しても結果がゲームに反映されるまでにタイムラグが発生する。
   開発メンバがコンパイル環境を整備するか、プログラマがコンパイルして再配布する手間がかかる。
   たとえ、コンパイル作業自体を自動化することは出来ても、結局プログラマが居ないとゲームの更新が出来ない。
 
 
* 問題解決に向けて

** コーディングの効率化

- ゲームで利用する様なデータ構造は言語で提供していてほしい。
- メモリ管理とか自分でやりたくない
- コーディングする上のバッドノウハウを減らす

** 速度
- C言語よりは遅くて良いが、ゲームなので高速な処理が求められる。
 
** 作業者が簡単に作業結果を確認できる環境
- 何か編集したら即座にゲームに組込める
- コンパイル環境が不要

* さくらんぼ亭の結論

- 開発環境の刷新が必要
  - C/C++ベースの開発を維持するのは困難
  - コンパイルが必要な環境は厳しい

- 要件を満たす言語/開発環境として挙ったのが
  - Lisp


* その前に

** Lispって何だっけ？

#+BEGIN_QUOTE
 LISP（リスプ、LISt Processingの略）は、プログラミング言語の一種である。括弧を多用する独特の構文を持つ。
 LISPは比較的容易に実装できるため、非常に多くの方言が存在する。
 関数型言語に分類されるが、ほとんどのLISP方言は、変数への束縛だけでなく、代入やデータ構造の破壊的操作も可能という、手続き型言語の性格ももっている。
--- wikipediaより
#+END_QUOTE

** Lispの特徴

#+BEGIN_QUOTE
 LISP の特徴として以下のようなものがある。
#+END_QUOTE

-  動的な型付け（値には型情報を持つが変数は型を持たない）
-  前置記法


#+BEGIN_QUOTE
 コード自身を第一級（ファーストクラス）オブジェクトとして扱うことができる
 LISPは、全てのプログラミング言語の中でも2番目に古い高級言語であり、現在でも広く使われている。ただし、最古の高級言語FORTRANと同様に、言語仕様は初期と比べて大きく変化している。
--- wikipediaより
#+END_QUOTE

** 良くある誤解

- インタプリタ
- 関数型に記述しないといけない
   - 代入ない
   - 逐次実行がない
- 型チェックがない    
- Emacs?

** Common Lisp？

- Common Lispの実際


** 言語の特徴おさらい


* Lispでのゲーム開発
** 環境について  
*** quicklisp
*** lispbuilder-sdl
*** emacs + slime

** コーディングについて

コーディングがどういった面で楽になるのか？

*** ゲームに使う道具
- ハッシュ
- クラス
- ベクタ
- リスト
- キュー
言語標準サポート

*** 関数がオブジェクト
- 関数ポインタとさようなら
深く考えないで関数が呼べるし、代入できる
- クロージャ

*** コンパイル不要(動的ロード)

* Lispの速度について
** 遅いの？

C++のSTLとLispとRubyで比較してみた。

- 簡単なクラスの生成速度
- ベクターへの挿入
- 関数適用 

* 他の作業者が簡単に作業結果を確認できる環境
** 複数人開発の課題


** 目指したい流れ
** DSL構築
LispだとDSLがうんぬん

* 苦労する点

* まとめ



